#!/usr/bin/env python
# Copyright 2018 Giordon Stark Permission is hereby granted, free of charge, to
# any person obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to permit
# persons to whom the Software is furnished to do so, subject to the following
# conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

from __future__ import print_function
from init_clock import I2C, Si5345, frequencies
from time import sleep
import sys

i2c = I2C(0x68, 0) # device @ 0x68, bus 0

def batch(iterable, n=1):
  l = len(iterable)
  for ndx in range(0, l, n):
    yield iterable[ndx:min(ndx+n, l)]

def set_page(i2c, page):
  i2c.write(bytearray([0x01, page]))

def do_i2c_block_write(i2c, block):
  page, register, value = block
  if page != do_i2c_block_write.page:
    set_page(i2c, page)
    do_i2c_block_write.page = page
  i2c.write(bytearray([register, value]))

do_i2c_block_write.page = 0x00

def do_i2c_write(i2c, configurations):
  for block in batch(configurations, 3): do_i2c_block_write(i2c, block)

frequency = 'MixMHz'

do_i2c_write(i2c, Si5345['preamble'])
sleep(0.3) # 300 ms delay
do_i2c_write(i2c, frequencies[frequency])
do_i2c_write(i2c, Si5345['soft reset'])
do_i2c_write(i2c, Si5345['postamble'])
print('{0:s} frequency was configured.'.format(frequency))
i2c.close()
